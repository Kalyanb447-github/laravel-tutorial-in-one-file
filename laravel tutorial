1)create laravel project 
composer create-project laravel/laravel todolist
2)set a public website 
go to C:\xampp\apache\conf\extra 
->open this file httpd-vhosts
->create an host at the below for example
change the root address and website name then save 
<VirtualHost *:80>
    DocumentRoot "C:/xampp/htdocs/todolist/public/"
    ServerName todolist.dev
</VirtualHost> 
->then open Notepad run as administrator
open file C:\Windows\System32\drivers\etc
 select to all file 
 open hosts
 at the last 
 set
 127.0.0.1 todolist.dev
then save
)makke controller
php artisan make:controller MessagesController

)make model
php artisan make:model Message
//make model with migration
php artisan make:model Message -m
1)form in laravel
<div class="container">
    {{Form::open(['url' => 'contact/submit', 'method' => 'post']) }}

   <div class="form-group">
        {{ Form::label('name','name', ['class' => 'control-label']) }}
        {{ Form::text('name','', array_merge(['class' => 'form-control'])) }}
    </div>
    <div class="form-group">
            {{ Form::label('email', 'email', ['class' => 'control-label']) }}
            {{ Form::email('email','', array_merge(['class' => 'form-control'])) }}
    </div>
    <div class="form-group">
                {{ Form::label('message', 'message', ['class' => 'control-label']) }}
                {{ Form::textarea('message','', array_merge(['class' => 'form-control'])) }}
    </div>
    {{Form::submit('Click Me!',['class' => 'btn btn-primary'])}}
    {!! Form::close() !!}
      </div>
      
2)validation 
//controller
  public function submit(Request $request){
        // return $request->input('name');
        $this->validate($request,
        [
            'name'=>'required',
            'email'=>'required',
        ]

        );
        return 'validarion successfull';
    }
//show erroe
//in app.blade.php
    <div class="row">
        <div class="col-md-8 col-lg-8">
           @if (count($errors) > 0)
               @foreach ($errors->all() as $error)
                   <div class="alert alert-danger">
                       {{$error}}
                   </div>
               @endforeach
           @endif
            @yield('contant')
        </div>
        <div class="col-md-4 col-lg-4">
            @include('inc.sidebar')
        </div>
    </div>
</div>

)Migration create table
//cmd

php artisan make:model Message -m
//goto Database\Migrations name of your migration file
   //call up() create table  
    public function up()
    {
        //create a teble masseges 
        //id fields are 
        Schema::create('masseges', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->string('name');
            $table->string('email');
            $table->mediumText('message');
            $table->timestamps();
        });
    }
    
  //send data to database
  public function submit(Request $request){
        // return $request->input('name');
        $this->validate($request,
        [
            'name'=>'required',
            'email'=>'required',
        ]

        );

        //create a new message
        //create an object of Massage model class
         $message=new Massege;
         //asaign the value database
         $message->name=$request->input('name');
         $message->email=$request->input('email');
         $message->messages=$request->input('message');

         //save message
         $message->save();

         //redirect to another page
         //with functon can give acces to the message
         return Redirect('/')->with('success','Message send');

        //return 'validarion successfull';
    }
//get data from database in function
route
Route::get('/messages','MessagesController@getMEssages');

    //get data from database
    public function getMEssages(){
       //get all meaasges from the table
       $messages = Massege::all();
       //send the data to another page
       return view('messages')->with('messages',$messages);
    }
//print all message
    @section('contant')
<h1>Messages</h1>
 @if (count($messages) >0 )
  @foreach ( $messages as $message)
      <ul class="list-group">
          <li class="list-group-item">
              Name : {{$message->name}}
          </li>
          <li class="list-group-item">
                Email : {{$message->email}}
          </li>
            <li class="list-group-item">
                 Message : {{$message->messages}}
            </li>
      </ul>
      <br>

  @endforeach
 @endif
@endsection

    /**
     * Reverse the migrations.
     *
     * @return void
     */

         //call down() delete table  
    public function down()
    {
        Schema::dropIfExists('masseges');
    }
//if error goto 
app/Provider AppServiseProvider 
 change the boot() to
 //import 
 use Illuminate\Support\Facades\Schema;

   public function boot()
    {
        Schema::defaultStringLength(191);
    }
)create a resource all crud function will auto create in controller
php artisan make:controller TodosController --resource
->Route will take care of all 
Route::resource('todo', 'TodosController');
)use tinker when you working in database
it is a commend line test editor
to open this
php artisan tinker
for example
>>> $var=new App\Todo();
=> App\Todo {#3015}
>>> $var->text='shopping 3';
=> "shopping 3"
>>> $var->body='buy laptop';
=> "buy laptop"
>>> $var->due='buy wednesday 4 jan';
=> "buy wednesday 4 jan"
>>> $var->save();
=> true
>>> $var->all();
exit 
))
//how to show data of a variable 
       printf($todos);
       echo $todos;
       return $todos;
       var_dump($todos);
       
))//query of databse get data from the latest order or manner
  public function index()
    {
      // $todos= Todo::all();
      $todos= Todo::orderBy('created_at','desc')->get();
       return view('todos.indax')->with('todos',$todos);
       //printf($todos);
       //echo $todos;
       //return $todos;
       //var_dump($todos);
    }
//show a single data
    public function show($id)
    {
     // return $id;
     //query for find by id
     $todo=Todo::find($id);
     return view('todos.show')->with('todo',$todo);
   //  return $todo->text;
    }
//show data
@extends('layout.app')
@section('content')
<a href="/">Back</a>
<h1>{{$todo->text}}</h1>
@endsection

//Delete 
step 1
      <form action="{{ route('todo.destroy',  $todo->id) }}" method="POST">
        {{ method_field('DELETE') }}
        {{ csrf_field() }}        
        <button class="btn btn-danger">Delete</button>
          </form>
  //step two for controler
       $todo=Todo::find($id);
       $todo->delete();
        return redirect('/')->with('success','Deleted successfully');       

//find logged in  user
$user_id= auth()->user()->id;
